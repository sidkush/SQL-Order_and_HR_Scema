USE HR;

#QUESTION 1
#Q.no(1).Write a query to perform join on the Employees and Department tables and display only employees who have a manager ID of 149.
SELECT * 
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE E.MANAGER_ID = 149;

#QUESTION 2
#Q.no(2).list other products that were bought along with product id 212 it provided their total qty bought is > 5.
SELECT ORDER_ID, OI.PRODUCT_ID, PRODUCT_DESC
FROM ORDER_ITEMS OI, PRODUCT P
WHERE OI.PRODUCT_ID = P.PRODUCT_ID AND OI.PRODUCT_ID NOT IN (212)
HAVING ORDER_ID IN (SELECT ORDER_ID
FROM ORDER_ITEMS
WHERE PRODUCT_ID NOT IN (212)
GROUP BY ORDER_ID
HAVING ORDER_ID IN (SELECT ORDER_ID FROM ORDER_ITEMS WHERE PRODUCT_ID = 212) AND SUM(PRODUCT_QUANTITY) > 5);

#QUESTION 3
#Q.no(3).Which are the most and least sold products (quantity-wise)? Show their id and description.
SELECT OI.PRODUCT_ID, PRODUCT_DESC, PRODUCT_QUANTITY
FROM ORDER_ITEMS OI
JOIN PRODUCT P ON OI.PRODUCT_ID = P.PRODUCT_ID
WHERE PRODUCT_QUANTITY IN (SELECT MAX(PRODUCT_QUANTITY) FROM ORDER_ITEMS)
OR  PRODUCT_QUANTITY IN (SELECT MIN(PRODUCT_QUANTITY) FROM ORDER_ITEMS);

#QUESTION 4
#Q.no(4).List customers who have not purchased any product. (Use a subquery).
SELECT CONCAT(CUSTOMER_FNAME,' ',CUSTOMER_LNAME) AS CUSTOMER_NAME
FROM (SELECT CUSTOMER_FNAME, CUSTOMER_LNAME, ORDER_ID
FROM ONLINE_CUSTOMER OC
LEFT JOIN ORDER_HEADER OH
ON OC.CUSTOMER_ID = OH.CUSTOMER_ID) AS CLEANED
WHERE ORDER_ID IS NULL;

#QUESTION 5
#Q.no(5).For a given product id =222,list which other products were also bought along with it. (Use Exists).
SELECT DISTINCT O2.ORDER_ID, O2.PRODUCT_ID, PRODUCT_DESC
FROM ORDER_ITEMS O2
JOIN PRODUCT P ON O2.PRODUCT_ID = P.PRODUCT_ID
WHERE EXISTS (SELECT * FROM ORDER_ITEMS O1 WHERE O1.PRODUCT_ID = 212 AND O1.ORDER_ID = O2.ORDER_ID) 
AND O2.PRODUCT_ID NOT LIKE (212);


#QUESTION 6
#Q.no(6).List the most expensive products in their respective classes.
SELECT CLEEN.PRODUCT_CLASS_CODE, CLEEN.PRODUCT_DESC, PC.PRODUCT_CLASS_DESC, PRODUCT_PRICE
FROM (SELECT PRODUCT_ID , PRODUCT_CLASS_CODE, PRODUCT_DESC, PRODUCT_PRICE,
RANK() OVER(PARTITION BY PRODUCT_CLASS_CODE ORDER BY PRODUCT_PRICE DESC) AS RANKING
FROM PRODUCT)AS CLEEN
JOIN PRODUCT_CLASS PC ON CLEEN.PRODUCT_CLASS_CODE = PC.PRODUCT_CLASS_CODE
WHERE RANKING IN (1);


#QUESTION 7
#Q.no(7).Assume all items of an order are packed into one single carton (box). 
        #Write a query to identify the optimum carton (carton with the least volume whose volume is greater than the total volume of all items)for a given order.
SELECT ORDER_ID, TOT_VOL, CARTON_ID, CARTON_VOLUME, DIFF
FROM (SELECT ORDER_ID, TOT_VOL, CARTON_ID, CARTON_VOLUME, (CARTON_VOLUME-TOT_VOL) AS DIFF
FROM (SELECT *
FROM (SELECT ORDER_ID, SUM(PRODUCT_QUANTITY*P.LEN*P.WIDTH*P.HEIGHT) AS TOT_VOL
FROM ORDER_ITEMS OI
JOIN PRODUCT P ON OI.PRODUCT_ID = P.PRODUCT_ID
GROUP BY ORDER_ID) AS A, 
(SELECT CARTON_ID, (LEN*WIDTH*HEIGHT) AS CARTON_VOLUME FROM CARTON ORDER BY CARTON_VOLUME ASC) AS C) AS F)AS G
WHERE DIFF IN (SELECT MIN(DIFF) 
FROM (SELECT ORDER_ID, TOT_VOL, CARTON_ID, CARTON_VOLUME, (CARTON_VOLUME-TOT_VOL) AS DIFF
FROM (SELECT *
FROM (SELECT ORDER_ID, SUM(PRODUCT_QUANTITY*P.LEN*P.WIDTH*P.HEIGHT) AS TOT_VOL
FROM ORDER_ITEMS OI
JOIN PRODUCT P ON OI.PRODUCT_ID = P.PRODUCT_ID
GROUP BY ORDER_ID) AS A, 
(SELECT CARTON_ID, (LEN*WIDTH*HEIGHT) AS CARTON_VOLUME FROM CARTON ORDER BY CARTON_VOLUME ASC) AS C) AS F) AS Q
WHERE DIFF > 0
GROUP BY ORDER_ID
);
SELECT * FROM CARTON;

#QUESTION 8
#Q.no(8).Which shipper has shipped highest volume of items? (Hint: Each product has L x W x H dimensions).
SELECT SHIPPER_NAME
FROM (SELECT SHIPPER_NAME, SUM(LEN*WIDTH*HEIGHT*PRODUCT_QUANTITY) AS TOT_VOL
FROM SHIPPER S
JOIN ORDER_HEADER OH ON S.SHIPPER_ID = OH.SHIPPER_ID
JOIN ORDER_ITEMS OI ON OH.ORDER_ID = OI.ORDER_ID
JOIN PRODUCT P ON OI.PRODUCT_ID = P.PRODUCT_ID
GROUP BY SHIPPER_NAME) AS C
WHERE C.TOT_VOL IN (SELECT MAX(CLEAN.TOT_VOL)
FROM  (SELECT SHIPPER_NAME, SUM(LEN*WIDTH*HEIGHT*PRODUCT_QUANTITY) AS TOT_VOL
FROM SHIPPER S
JOIN ORDER_HEADER OH ON S.SHIPPER_ID = OH.SHIPPER_ID
JOIN ORDER_ITEMS OI ON OH.ORDER_ID = OI.ORDER_ID
JOIN PRODUCT P ON OI.PRODUCT_ID = P.PRODUCT_ID
GROUP BY SHIPPER_NAME) AS CLEAN);


#or 

 
SELECT SHIPPER_NAME
FROM (SELECT SHIPPER_NAME, SUM(LEN*WIDTH*HEIGHT*PRODUCT_QUANTITY) AS TOT_VOL
FROM SHIPPER S
JOIN ORDER_HEADER OH ON S.SHIPPER_ID = OH.SHIPPER_ID
JOIN ORDER_ITEMS OI ON OH.ORDER_ID = OI.ORDER_ID
JOIN PRODUCT P ON OI.PRODUCT_ID = P.PRODUCT_ID
GROUP BY SHIPPER_NAME) AS C
order by C.TOT_VOL desc
limit 1;
